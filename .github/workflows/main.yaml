on:
  push: # 検証時にmainにpush時に実行されたほうが繰り返しやすいため設定
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: v3.13.0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: 3.x

      - name: Set up chart-testing
        uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: |
          ct lint --config ct.yaml validate-maintainers: true \
          --validate-maintainers=false # Maintainerのチェックを無効化

# 今回はinstallをしてテストまではしないのでコメントアウト
#       - name: Create kind cluster
#         uses: helm/kind-action@dda0770415bac9fc20092cacbc54aa298604d140 # v1.8.0
#         if: steps.list-changed.outputs.changed == 'true'
# 
#       - name: Run chart-testing (install)
#         run: ct install --config ct.yaml
  kubeconform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          fetch-depth: 0
      - name: Setup action-setup-kube-tools
        uses: yokawasa/action-setup-kube-tools@v0.11.1
        with:
          setup-tools: |
            kubeconform
            helm
      - name: Check with kubeconform
        run: |
          find ./charts -maxdepth 1 -mindepth 1 \
          | xargs -I {} helm template {} -f values/env/tes/values.yaml \
          | kubeconform --summary --output json  # -depth 1の場合エラーになる