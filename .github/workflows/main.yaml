on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    strategy:
      matrix:
        # ツールによってチャートのパスを明示する必要があるためリストアップしておく
        chart:
          - mywebapp
    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          fetch-depth: 0

      ### 各種ツールのインストール

      # 各種ツールの実行結果をPull Requestにコメントして通知するために利用
      - name: Install github-comment
        run: |
          wget -q -O - https://github.com/suzuki-shunsuke/github-comment/releases/download/v6.1.0/github-comment_6.1.0_linux_amd64.tar.gz | tar -zxvf - -C /usr/local/bin

      - name: Set up helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0

      - name: Install kubeconform
        run: |
          wget -q -O - https://github.com/yannh/kubeconform/releases/download/v0.6.6/kubeconform-linux-amd64.tar.gz | tar -zxvf - -C /usr/local/bin

      - name: Install Polaris
        run: |
          wget -q -O - https://github.com/FairwindsOps/polaris/releases/download/9.2.0/polaris_linux_amd64.tar.gz | tar -zxvf - -C /usr/local/bin

      - name: Install Pluto
        run: |
          wget -q -O - https://github.com/FairwindsOps/pluto/releases/download/v5.19.4/pluto_5.19.4_linux_amd64.tar.gz | tar -zxvf - -C /usr/local/bin

      ### 静的解析

      - name: "[${{ matrix.chart }}]: Lint Helm Chart"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Pull Requestに出力される結果はexit codeが0ではない場合であるため動作確認のため `--strict` オプションを付与
        run: github-comment exec -pr ${{ github.event.number }} -k static-code-analysis -- \ 
          helm lint --strict ./charts/${{ matrix.chart }}
        continue-on-error: true
        id: helm_lint

      - name: "[${{ matrix.chart }}]: Run kubeconform"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: github-comment exec -pr ${{ github.event.number }} -k static-code-analysis -- \
          kubeconform --summary -output pretty ./charts/${{ matrix.chart }}
        continue-on-error: true
        id: kubeconform

      - name: "[${{ matrix.chart }}]: Run Polaris audit"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: github-comment exec -pr ${{ github.event.number }} -k static-code-analysis -- \
          polaris audit --only-show-failed-tests --format pretty --severity danger --set-exit-code-on-danger --helm-chart ./charts/${{ matrix.chart }}
        continue-on-error: true
        id: polaris

      - name: "[${{ matrix.chart }}]: Run Pluto"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: github-comment exec -pr ${{ github.event.number }} -k static-code-analysis -- \
          pluto detect-files -d ./charts/${{ matrix.chart }}
        continue-on-error: true
        id: pluto

      - name: "[${{ matrix.chart }}]: Run Trivy vulnerability scanner in IaC mode"
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # tag=0.24.0
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          scan-ref: 'charts/${{ matrix.chart }}'
          # output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
        continue-on-error: true
        id: trivy

      - name: Check results
        run: |
          if [ ${{ steps.helm_lint.outcome }} == 'failure' ] || [ ${{ steps.kubeconform.outcome }} == 'failure' ] || [ ${{ steps.pluto.outcome }} == 'failure' ] || [ ${{ steps.polaris.outcome }} == 'failure' || [ ${{ steps.trivy.outcome }} == 'failure' ] ]; then
            echo "One or more steps failed"
            exit 1
          else
            echo "All steps succeeded"
            exit 0
          fi
